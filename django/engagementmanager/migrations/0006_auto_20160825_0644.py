#
# ============LICENSE_START==========================================
# org.onap.vvp/engagementmgr
# ===================================================================
# Copyright © 2017 AT&T Intellectual Property. All rights reserved.
# ===================================================================
#
# Unless otherwise specified, all software contained herein is licensed
# under the Apache License, Version 2.0 (the “License”);
# you may not use this software except in compliance with the License.
# You may obtain a copy of the License at
#
#             http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#
# Unless otherwise specified, all documentation contained herein is licensed
# under the Creative Commons License, Attribution 4.0 Intl. (the “License”);
# you may not use this documentation except in compliance with the License.
# You may obtain a copy of the License at
#
#             https://creativecommons.org/licenses/by/4.0/
#
# Unless required by applicable law or agreed to in writing, documentation
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ============LICENSE_END============================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-25 06:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('engagementmanager', '0005_auto_20160815_1248'),
    ]

    operations = [
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('uuid', models.CharField(max_length=36,
                                          primary_key=True, serialize=False)),
                ('name', models.CharField(
                    max_length=255,
                    verbose_name='checklist name')),
                ('state', models.CharField(
                    choices=[(b'(4,)', b'approval'),
                             (b'(7,)', b'archive'),
                             (b'(1,)', b'automation'), (b'(6,)', b'closed'), (
                        b'(5,)', b'handoff'), (b'(3,)', b'peer_review'),
                        (b'8', b'pending'), (b'(2,)', b'review')],
                    default=b'automation', max_length=36)),
                ('validation_cycle', models.IntegerField(

                    verbose_name='validation cycle')),
                ('weight', models.FloatField(
                    default=0,
                    verbose_name='checklist weight')),
                ('associated_files', models.TextField(

                    verbose_name='list of files from gitlab')),
                ('create_time', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='creation time')),
                ('update_time', models.DateTimeField(
                    blank=True,
                    null=True,
                    verbose_name='last update time')),
                ('creator', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='checklist_creator',
                    to='engagementmanager.IceUser')),
            ],
            options={
                'db_table': 'ice_checklist',
            },
        ),
        migrations.CreateModel(
            name='ChecklistAuditLog',
            fields=[
                ('uuid', models.CharField(max_length=36,
                                          primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('create_time', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='creation time')),
                ('update_time', models.DateTimeField(
                    blank=True,
                    null=True,
                    verbose_name='last update time')),
                ('checklist', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to='engagementmanager.Checklist')),
                ('creator', models.ForeignKey(

                    on_delete=django.db.models.deletion.CASCADE,
                    to='engagementmanager.IceUser')),
            ],
            options={
                'db_table': 'ice_checklist_audit_log',
            },
        ),
        migrations.CreateModel(
            name='ChecklistDecision',
            fields=[
                ('uuid', models.CharField(max_length=36,
                                          primary_key=True, serialize=False)),
                ('review_value', models.CharField(choices=[
                 (b'(1,)', b'approved'), (b'(2,)', b'denied'), (b'4', b'na'),
                 (b'(3,)', b'not_relevant')], max_length=36)),
                ('peer_review_value', models.CharField(choices=[
                 (b'(1,)', b'approved'), (b'(2,)', b'denied'), (b'4', b'na'),
                 (b'(3,)', b'not_relevant')], max_length=36)),
                ('create_time', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='creation time')),
                ('update_time', models.DateTimeField(
                    blank=True,
                    null=True,
                    verbose_name='last update time')),
                ('checklist', models.ForeignKey(

                    on_delete=django.db.models.deletion.CASCADE,
                    to='engagementmanager.Checklist')),
            ],
            options={
                'db_table': 'ice_checklist_decision',
            },
        ),
        migrations.CreateModel(
            name='ChecklistLineItem',
            fields=[
                ('uuid', models.CharField(max_length=36,
                                          primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255,
                                          verbose_name='line name')),
                ('weight', models.FloatField(verbose_name='line weight')),
                ('description', models.TextField(
                    verbose_name='line description')),
                ('line_type', models.CharField(
                    choices=[(b'(1,)', b'auto'),
                             (b'2', b'manual')],
                    default=b'auto', max_length=36)),
                ('validation_instructions', models.TextField(

                    verbose_name='line validation instructions')),
                ('create_time', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='creation time')),
                ('update_time', models.DateTimeField(
                    blank=True,
                    null=True,
                    verbose_name='last update time')),
            ],
            options={
                'db_table': 'ice_checklist_line_item',
            },
        ),
        migrations.CreateModel(
            name='ChecklistSection',
            fields=[
                ('uuid', models.CharField(max_length=36,
                                          primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255,
                                          verbose_name='section name')),
                ('weight', models.FloatField(verbose_name='checklist weight')),
                ('description', models.TextField(

                    verbose_name='section description')),
                ('validation_instructions', models.TextField(

                    verbose_name='section validation instructions')),
                ('create_time', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='creation time')),
                ('update_time', models.DateTimeField(
                    blank=True,
                    null=True,
                    verbose_name='last update time')),
                ('parent_section',
                 models.ForeignKey(blank=True, null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   to='engagementmanager.ChecklistSection')),
            ],
            options={
                'db_table': 'ice_checklist_section',
            },
        ),
        migrations.CreateModel(
            name='ChecklistTemplate',
            fields=[
                ('uuid', models.CharField(max_length=36,
                                          primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255,
                                          verbose_name='template name')),
                ('category', models.CharField(
                    choices=[
                        (b'3', b'glance'), (b'(2,)', b'heat'),
                        (b'(1,)', b'overall')],
                    default=b'overall', max_length=36)),
                ('version', models.IntegerField(
                    verbose_name='template version')),
                ('create_time', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='creation time')),
                ('update_time', models.DateTimeField(
                    blank=True,
                    null=True,
                    verbose_name='last update time')),
            ],
            options={
                'db_table': 'ice_checklist_template',
            },
        ),
        migrations.AddField(
            model_name='engagement',
            name='peer_reviewer',
            field=models.ForeignKey(
                blank=True, null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='Engagement_peer_reviewer',
                to='engagementmanager.IceUser'),
        ),
        migrations.AddField(
            model_name='nextstep',
            name='assignees',
            field=models.ManyToManyField(
                related_name='assignees', to='engagementmanager.IceUser'),
        ),
        migrations.AddField(
            model_name='nextstep',
            name='due_date',
            field=models.DateField(null=True,
                                   verbose_name='due_date'),
        ),
        migrations.AddField(
            model_name='nextstep',
            name='files',
            field=models.TextField(null=True,
                                   verbose_name='list of files'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='activity_type',
            field=models.CharField(
                choices=[(b'6', b'change_checklist_state'),
                         (b'3', b'eng_validation_request'), (
                    b'4', b'next_steps'), (b'2', b'ssh_key_added'),
                    (b'1', b'user_joined_eng'), (b'5', b'vfc')],
                max_length=36),
        ),
        migrations.AddField(
            model_name='checklistsection',
            name='template',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='engagementmanager.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='checklistlineitem',
            name='section',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.ChecklistSection'),
        ),
        migrations.AddField(
            model_name='checklistlineitem',
            name='template',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='checklistdecision',
            name='lineitem',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.ChecklistLineItem'),
        ),
        migrations.AddField(
            model_name='checklistdecision',
            name='template',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='checklistauditlog',
            name='decision',
            field=models.ForeignKey(
                blank=True, null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.ChecklistDecision'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='engagement',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.Engagement'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='owner',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='checklist_owner',
                to='engagementmanager.IceUser'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='template',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='engagementmanager.ChecklistTemplate'),
        ),
    ]
