#
# ============LICENSE_START==========================================
# org.onap.vvp/engagementmgr
# ===================================================================
# Copyright © 2017 AT&T Intellectual Property. All rights reserved.
# ===================================================================
#
# Unless otherwise specified, all software contained herein is licensed
# under the Apache License, Version 2.0 (the “License”);
# you may not use this software except in compliance with the License.
# You may obtain a copy of the License at
#
#             http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#
# Unless otherwise specified, all documentation contained herein is licensed
# under the Creative Commons License, Attribution 4.0 Intl. (the “License”);
# you may not use this documentation except in compliance with the License.
# You may obtain a copy of the License at
#
#             https://creativecommons.org/licenses/by/4.0/
#
# Unless required by applicable law or agreed to in writing, documentation
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ============LICENSE_END============================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-01-12 08:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('engagementmanager', '0019_auto_20170104_1715'),
    ]

    operations = [
        migrations.DeleteModel(
            name='ContactRequest',
        ),
        migrations.DeleteModel(
            name='EngagementRequest',
        ),
        migrations.AlterField(
            model_name='engagement',
            name='engagement_manual_id',
            field=models.CharField(db_index=True, default=-1, max_length=36),
        ),
        migrations.AlterField(
            model_name='engagement',
            name='engagement_stage',
            field=models.CharField(
                choices=[(b'Active', b'Active'), (b'Archived', b'Archived'),
                         (b'Completed', b'Completed'), (
                    b'Intake', b'Intake'), (b'Validated', b'Validated')],
                db_index=True, default=b'Intake',
                max_length=15),
        ),
        migrations.AlterField(
            model_name='iceuser',
            name='email',
            field=models.EmailField(
                db_index=True, max_length=254, unique=True,
                verbose_name='email'),
        ),
        migrations.AlterField(
            model_name='invitation',
            name='invitation_token',
            field=models.CharField(db_index=True, max_length=1024),
        ),
        migrations.AlterField(
            model_name='vf',
            name='engagement',
            field=models.OneToOneField(
                default=-1,
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.Engagement'),
        ),
        migrations.AlterField(
            model_name='vf',
            name='name',
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='vfc',
            name='name',
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterIndexTogether(
            name='activity',
            index_together=set([('engagement', 'activity_owner')]),
        ),
        migrations.AlterIndexTogether(
            name='nextstep',
            index_together=set([('engagement_stage', 'owner')]),
        ),
        migrations.AlterIndexTogether(
            name='notification',
            index_together=set([('user', 'is_read')]),
        ),
    ]
