#
# ============LICENSE_START==========================================
# org.onap.vvp/engagementmgr
# ===================================================================
# Copyright © 2017 AT&T Intellectual Property. All rights reserved.
# ===================================================================
#
# Unless otherwise specified, all software contained herein is licensed
# under the Apache License, Version 2.0 (the “License”);
# you may not use this software except in compliance with the License.
# You may obtain a copy of the License at
#
#             http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#
# Unless otherwise specified, all documentation contained herein is licensed
# under the Creative Commons License, Attribution 4.0 Intl. (the “License”);
# you may not use this documentation except in compliance with the License.
# You may obtain a copy of the License at
#
#             https://creativecommons.org/licenses/by/4.0/
#
# Unless required by applicable law or agreed to in writing, documentation
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ============LICENSE_END============================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-04 07:28
from __future__ import unicode_literals

import datetime

from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('engagementmanager', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='validationcycle',
            name='vfc',
        ),
        migrations.DeleteModel(
            name='ValidationException',
        ),
        migrations.AlterUniqueTogether(
            name='validationsteps',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='validationsteps',
            name='test',
        ),
        migrations.RemoveField(
            model_name='validationsteps',
            name='validation_cycle',
        ),
        migrations.RemoveField(
            model_name='validationsteps',
            name='validation_exceptions',
        ),
        migrations.AlterModelOptions(
            name='nextstep',
            options={},
        ),
        migrations.AddField(
            model_name='engagement',
            name='create_time',
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                verbose_name='creation time'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='creator',
            field=models.ForeignKey(
                blank=True, null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='Engagement_creator',
                to='engagementmanager.IceUser'),
        ),
        migrations.AddField(
            model_name='vfc',
            name='create_time',
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                verbose_name='creation time'),
        ),
        migrations.AddField(
            model_name='vfc',
            name='creator',
            field=models.ForeignKey(
                blank=True, null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='Vfc_creator',
                to='engagementmanager.IceUser'),
        ),
        migrations.AddField(
            model_name='vfc',
            name='external_ref_id',
            field=models.CharField(default='', max_length=20),
        ),
        migrations.AddField(
            model_name='vfc',
            name='ice_mandated',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='activity',
            name='activity_owner',
            field=models.ForeignKey(
                blank=True, null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='engagementmanager.IceUser'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='activity_type',
            field=models.CharField(
                choices=[(b'3', b'eng_validation_request'),
                         (b'4', b'next_steps'),
                         (b'2', b'ssh_key_added'),
                         (b'1', b'user_joined_eng'),
                         (b'5', b'vfc')], max_length=36),
        ),
        migrations.AlterField(
            model_name='engagement',
            name='contact_user',
            field=models.ForeignKey(
                blank=True, null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='Engagement_contact_user',
                to='engagementmanager.IceUser'),
        ),
        migrations.AlterField(
            model_name='engagement',
            name='target_completion_date',
            field=models.DateField(blank=True, default=datetime.datetime(
                2016, 7, 20, 7, 28, 25, 168000, tzinfo=utc), null=True),
        ),
        migrations.AlterField(
            model_name='vfc',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='vfc',
            name='uuid',
            field=models.CharField(
                max_length=36, primary_key=True,
                serialize=False, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='vfc',
            unique_together=set([]),
        ),
        migrations.DeleteModel(
            name='Test',
        ),
        migrations.DeleteModel(
            name='ValidationCycle',
        ),
        migrations.DeleteModel(
            name='ValidationSteps',
        ),
        migrations.RemoveField(
            model_name='vfc',
            name='id',
        ),
        migrations.RemoveField(
            model_name='vfc',
            name='version',
        ),
        migrations.RemoveField(
            model_name='vfc',
            name='vf_acronym',
        ),
    ]
